@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{ var home = CurrentPage.Site(); }

@if (home.Children.Any())
{
    @* Get the first page in the children *@
    var naviLevel = home.Children.First().Level;
    
    @* Add in level for a CSS hook *@
    <ul class="level-@naviLevel">            
		<li style="width: 30px; margin-top: 19px;">
			<a href="@home.Url" style="padding:0;"><img src="@(home.SiteLogo)"/></a>
			@*<div class="brand" style="background-image:url('@(home.SiteLogo)?height=150&width=300&bgcolor=000')"></div>*@
			
		</li>
        @* For each child page under the home node *@
        @foreach (var childPage in home.Children)
        {   
            if (childPage.Children.Any())
            {                    
                <li class="has-child @(childPage.IsAncestorOrSelf(CurrentPage) ? "selected" : null)">
					@if(childPage.DocumentTypeAlias == "LandingPage" || childPage.DocumentTypeAlias == "BlogPostRepository") 
					{
                    	<a href="@childPage.Url">@childPage.Name</a>
						@childPages(childPage.Children)
					} else {
						<a href="@childPage.Url">@childPage.Name</a>
					}
                </li>
            } 
			else
            {
                <li class="@(childPage.IsAncestorOrSelf(CurrentPage) ? "selected" : null)">
                    <a href="@childPage.Url">@childPage.Name</a>
                </li>
            }            
        }
    </ul>
}

@helper childPages(dynamic pages)
{
    @* Ensure that we have a collection of pages *@
    if (pages.Any())
    {
        @* Get the first page in pages and get the level *@
        var naviLevel = pages.First().Level;
        
        @* Add in level for a CSS hook *@
        <ul class="sublevel level-@(naviLevel)">
            @foreach (var page in pages)
            {
				if(!page.hideInNavigation)
				{
					<li>
						<a href="@page.Url">@page.Name</a>

						@* if the current page has any children *@
						@if (page.Children.Any())
						{                        
							@* Call our helper to display the children *@
							@childPages(page.Children)
						}
					</li>
				}
            }
        </ul>
    }
}